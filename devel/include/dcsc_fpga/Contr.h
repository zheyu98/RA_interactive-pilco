// Generated by gencpp from file dcsc_fpga/Contr.msg
// DO NOT EDIT!


#ifndef DCSC_FPGA_MESSAGE_CONTR_H
#define DCSC_FPGA_MESSAGE_CONTR_H

#include <ros/service_traits.h>


#include <dcsc_fpga/ContrRequest.h>
#include <dcsc_fpga/ContrResponse.h>


namespace dcsc_fpga
{

struct Contr
{

typedef ContrRequest Request;
typedef ContrResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Contr
} // namespace dcsc_fpga


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::dcsc_fpga::Contr > {
  static const char* value()
  {
    return "42839bbfa364d97af6de75a8d600af96";
  }

  static const char* value(const ::dcsc_fpga::Contr&) { return value(); }
};

template<>
struct DataType< ::dcsc_fpga::Contr > {
  static const char* value()
  {
    return "dcsc_fpga/Contr";
  }

  static const char* value(const ::dcsc_fpga::Contr&) { return value(); }
};


// service_traits::MD5Sum< ::dcsc_fpga::ContrRequest> should match
// service_traits::MD5Sum< ::dcsc_fpga::Contr >
template<>
struct MD5Sum< ::dcsc_fpga::ContrRequest>
{
  static const char* value()
  {
    return MD5Sum< ::dcsc_fpga::Contr >::value();
  }
  static const char* value(const ::dcsc_fpga::ContrRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::dcsc_fpga::ContrRequest> should match
// service_traits::DataType< ::dcsc_fpga::Contr >
template<>
struct DataType< ::dcsc_fpga::ContrRequest>
{
  static const char* value()
  {
    return DataType< ::dcsc_fpga::Contr >::value();
  }
  static const char* value(const ::dcsc_fpga::ContrRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::dcsc_fpga::ContrResponse> should match
// service_traits::MD5Sum< ::dcsc_fpga::Contr >
template<>
struct MD5Sum< ::dcsc_fpga::ContrResponse>
{
  static const char* value()
  {
    return MD5Sum< ::dcsc_fpga::Contr >::value();
  }
  static const char* value(const ::dcsc_fpga::ContrResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::dcsc_fpga::ContrResponse> should match
// service_traits::DataType< ::dcsc_fpga::Contr >
template<>
struct DataType< ::dcsc_fpga::ContrResponse>
{
  static const char* value()
  {
    return DataType< ::dcsc_fpga::Contr >::value();
  }
  static const char* value(const ::dcsc_fpga::ContrResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // DCSC_FPGA_MESSAGE_CONTR_H
